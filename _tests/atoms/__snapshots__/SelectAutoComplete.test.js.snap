// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Expect <SelectAutoComplete> to render 1`] = `
<SelectAutoComplete
  onChange={[Function]}
  value="This is text"
>
  <SelectAutoCompleteStyles__SelectWrapper
    className=""
  >
    <StyledComponent
      className=""
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0",
            "isStatic": true,
            "lastClassName": "bcmjyf",
            "rules": Array [
              "
    width: 100%;
    background-color: ",
              "#fff",
              ";
    padding: 16px 0;
    box-sizing: border-box;
    min-height: 66px;
    display: flex;
    flex-direction: column;
    position: relative; 
    border : 1px solid #f1f5f7;

    &.isFocusedWrapper {
        border-left: 4px solid ",
              "#33cccc",
              ";
    }

    .validation_msg {

        svg {
            position: absolute;
            top: 34px;
            right:  12px; 
            z-index: 5;
            background: ",
              "#fff",
              ";  
        }
        span {
            font-size: 12px;
            right: 12px;
            position: absolute;
            color: ",
              "#9966ff",
              ";
            z-index: 1;
            top: 10px;
        }
    }
    
    .react-select-container {
        background-color: ",
              "#fff",
              ";
        width: 100%;
        position: unset;
        padding: 0 24px; 
    }
    .react-select-container.focused {
        box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1); 
    }
    .react-select-container .react-select__value-container {
        border-radius: 0;
        flex: 1;
        padding: 0px; 
    }
    .react-select-container .react-select__placeholder {
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
        line-height: 1.2;
        letter-spacing: normal;
        color: ",
              "#4a5365",
              ";
        margin: 0; 
    }
    .react-select-container .react-select__control {
        border-width: 0;
        border-color: ",
              "#fff",
              " !important;
        background-color: ",
              "#fff",
              " !important;
        border-radius: 0 !important;
        box-shadow: none;
        min-height: 33px;
        cursor: pointer; 
    }
    .react-select-container .react-select__menu {
        border-radius: 0;
        margin-top: 0;
        border-color: ",
              "#859099",
              ";
        border-width: 20px !important;
        z-index: 50;
        left: 0; 
       
    }
    .react-select-container .react-select__menu-list {
        padding: 16px 0; 
    }
    .react-select-container .react-select__menu-list .react-select__option--is-selected {
        color: ",
              "#9966ff",
              ";
        background: rgba(",
              "#9966ff",
              ", 0.15); 
    }
    .react-select-container .react-select__indicator-separator {
        width: 0; 
    }
    .react-select-container .react-select__indicators {
        position: absolute;
        top: 0px;
        right: 0; 
    }
    .react-select-container .react-select__option {
        font-size: 16px;
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
        line-height: 3;
        letter-spacing: normal;
        color: ",
              "#859099",
              ";
        background-color: ",
              "#fff",
              ";
        padding: 0 24px;
        cursor: pointer; 
    }
    .react-select__option:last-child {
        background:  ",
              "#fff",
              ";
        color: ",
              "#9966ff",
              " !important;
    }
    .react-select-container .react-select__option:last-child:hover {
        opacity: .7; 
    }
    .react-select-container .react-select__option:hover {
        color: ",
              "#9966ff",
              "; 
    }
    .Select[aria-expanded='true'] .react-select-container .react-select__indicators .react-select__indicator.react-select__dropdown-indicator {
        transform: rotate(180deg); 
    }
    .react-select__indicator.react-select__dropdown-indicator {
        color: ",
              "#9966ff",
              ";
        padding: 0;
        transform: rotate(0deg);
        transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
        -webkit-user-select: none;
        -moz-user-select: -moz-none;
        -ms-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0); 
    }

    #react-select-2-input {
        cursor: none !important; 
    }
    // .react-select__indicator.react-select__loading-indicator {
    //     color: ",
              "#9966ff",
              " !important; 
    // }

    // .menu-top .react-select__menu-notice--loading {
    //     margin-top: 130px;
    //     height: 136px; 
    // }

    // .react-select__loading-indicator {
    //     position: relative;
    //     width: 21px;
    //     height: 21px;
    //     background: ",
              "#fff",
              ";
    //     left: 20px;
    //     z-index: 9999; 
    // }
    // .react-select__loading-indicator span {
    //     top: 0;
    //     left: 0;
    //     background: ",
              "#fff",
              ";
    //     display: block;
    //     position: absolute;
    //     width: 14px;
    //     height: 14px;
    //     margin: 2px;
    //     border: 2px solid;
    //     border-radius: 50%;
    //     animation: span 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
    //     border-color: ",
              "#9966ff",
              " ",
              "#9966ff",
              " ",
              "#9966ff",
              " ",
              "#fff",
              "; 
    // }
    // .react-select__loading-indicator span:nth-child(1) {
    //     animation-delay: -0.45s; 
    // }
    // .react-select__loading-indicator span:nth-child(2) {
    //     animation-delay: -0.3s; 
    // }
    // .react-select__loading-indicator span:nth-child(3) {
    //     animation-delay: -0.15s; 
    // }

    @keyframes span {
        0% {
            transform: rotate(0deg); 
        }
        100% {
        transform: rotate(360deg); 
    } 

",
            ],
          },
          "displayName": "SelectAutoCompleteStyles__SelectWrapper",
          "render": [Function],
          "styledComponentId": "SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0 bcmjyf"
      >
        <SelectAutoCompleteStyles__Text>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "SelectAutoCompleteStyles__Text-sc-6kk0qb-1",
                  "isStatic": true,
                  "lastClassName": "lipOkn",
                  "rules": Array [
                    "
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.6;
  letter-spacing: normal;
  color: ",
                    "#859099",
                    ";
  margin-left: 24px;
",
                  ],
                },
                "displayName": "SelectAutoCompleteStyles__Text",
                "render": [Function],
                "styledComponentId": "SelectAutoCompleteStyles__Text-sc-6kk0qb-1",
                "target": "label",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <label
              className="SelectAutoCompleteStyles__Text-sc-6kk0qb-1 lipOkn"
            />
          </StyledComponent>
        </SelectAutoCompleteStyles__Text>
        <Async
          autoComplete={false}
          cacheOptions={false}
          className=" react-select-container false  "
          classNamePrefix="react-select"
          closeMenuOnSelect={true}
          createOptionPosition="last"
          defaultOptions={true}
          formatCreateLabel={[Function]}
          isSearchable={true}
          isValidNewOption={[Function]}
          key="key"
          labelKey="label"
          loadOptions={[Function]}
          loadingMessage={[Function]}
          noOptionsMessage={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInputChange={[Function]}
          onMenuClose={[Function]}
          onMenuOpen={[Function]}
          placeholder="Selecione"
          value=""
          valueKey="value"
        >
          <StateManager
            autoComplete={false}
            cacheOptions={false}
            className=" react-select-container false  "
            classNamePrefix="react-select"
            closeMenuOnSelect={true}
            createOptionPosition="last"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultOptions={true}
            defaultValue={null}
            filterOption={null}
            formatCreateLabel={[Function]}
            isLoading={true}
            isSearchable={true}
            isValidNewOption={[Function]}
            labelKey="label"
            loadingMessage={[Function]}
            noOptionsMessage={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onInputChange={[Function]}
            onMenuClose={[Function]}
            onMenuOpen={[Function]}
            options={Array []}
            placeholder="Selecione"
            value=""
            valueKey="value"
          >
            <Creatable
              allowCreateWhileLoading={false}
              autoComplete={false}
              cacheOptions={false}
              className=" react-select-container false  "
              classNamePrefix="react-select"
              closeMenuOnSelect={true}
              createOptionPosition="last"
              defaultInputValue=""
              defaultMenuIsOpen={false}
              defaultOptions={true}
              defaultValue={null}
              filterOption={null}
              formatCreateLabel={[Function]}
              getNewOptionData={[Function]}
              inputValue=""
              isLoading={true}
              isSearchable={true}
              isValidNewOption={[Function]}
              labelKey="label"
              loadingMessage={[Function]}
              menuIsOpen={false}
              noOptionsMessage={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              options={Array []}
              placeholder="Selecione"
              value=""
              valueKey="value"
            >
              <Select
                allowCreateWhileLoading={false}
                autoComplete={false}
                backspaceRemovesValue={true}
                blurInputOnSelect={true}
                cacheOptions={false}
                captureMenuScroll={false}
                className=" react-select-container false  "
                classNamePrefix="react-select"
                closeMenuOnScroll={false}
                closeMenuOnSelect={true}
                components={Object {}}
                controlShouldRenderValue={true}
                createOptionPosition="last"
                defaultInputValue=""
                defaultMenuIsOpen={false}
                defaultOptions={true}
                defaultValue={null}
                escapeClearsValue={false}
                filterOption={null}
                formatCreateLabel={[Function]}
                formatGroupLabel={[Function]}
                getNewOptionData={[Function]}
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                inputValue=""
                isDisabled={false}
                isLoading={true}
                isMulti={false}
                isOptionDisabled={[Function]}
                isRtl={false}
                isSearchable={true}
                isValidNewOption={[Function]}
                labelKey="label"
                loadingMessage={[Function]}
                maxMenuHeight={300}
                menuIsOpen={false}
                menuPlacement="bottom"
                menuPosition="absolute"
                menuShouldBlockScroll={false}
                menuShouldScrollIntoView={true}
                minMenuHeight={140}
                noOptionsMessage={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInputChange={[Function]}
                onMenuClose={[Function]}
                onMenuOpen={[Function]}
                openMenuOnClick={true}
                openMenuOnFocus={false}
                options={Array []}
                pageSize={5}
                placeholder="Selecione"
                screenReaderStatus={[Function]}
                styles={Object {}}
                tabIndex="0"
                tabSelectsValue={true}
                value=""
                valueKey="value"
              >
                <SelectContainer
                  className=" react-select-container false  "
                  clearValue={[Function]}
                  cx={[Function]}
                  getStyles={[Function]}
                  getValue={[Function]}
                  hasValue={false}
                  innerProps={
                    Object {
                      "id": undefined,
                      "onKeyDown": [Function],
                    }
                  }
                  isDisabled={false}
                  isFocused={false}
                  isMulti={false}
                  isRtl={false}
                  options={Array []}
                  selectOption={[Function]}
                  selectProps={
                    Object {
                      "allowCreateWhileLoading": false,
                      "autoComplete": false,
                      "backspaceRemovesValue": true,
                      "blurInputOnSelect": true,
                      "cacheOptions": false,
                      "captureMenuScroll": false,
                      "className": " react-select-container false  ",
                      "classNamePrefix": "react-select",
                      "closeMenuOnScroll": false,
                      "closeMenuOnSelect": true,
                      "components": Object {},
                      "controlShouldRenderValue": true,
                      "createOptionPosition": "last",
                      "defaultInputValue": "",
                      "defaultMenuIsOpen": false,
                      "defaultOptions": true,
                      "defaultValue": null,
                      "escapeClearsValue": false,
                      "filterOption": null,
                      "formatCreateLabel": [Function],
                      "formatGroupLabel": [Function],
                      "getNewOptionData": [Function],
                      "getOptionLabel": [Function],
                      "getOptionValue": [Function],
                      "inputValue": "",
                      "isDisabled": false,
                      "isLoading": true,
                      "isMulti": false,
                      "isOptionDisabled": [Function],
                      "isRtl": false,
                      "isSearchable": true,
                      "isValidNewOption": [Function],
                      "labelKey": "label",
                      "loadingMessage": [Function],
                      "maxMenuHeight": 300,
                      "menuIsOpen": false,
                      "menuPlacement": "bottom",
                      "menuPosition": "absolute",
                      "menuShouldBlockScroll": false,
                      "menuShouldScrollIntoView": true,
                      "minMenuHeight": 140,
                      "noOptionsMessage": [Function],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "onInputChange": [Function],
                      "onMenuClose": [Function],
                      "onMenuOpen": [Function],
                      "openMenuOnClick": true,
                      "openMenuOnFocus": false,
                      "options": Array [],
                      "pageSize": 5,
                      "placeholder": "Selecione",
                      "screenReaderStatus": [Function],
                      "styles": Object {},
                      "tabIndex": "0",
                      "tabSelectsValue": true,
                      "value": "",
                      "valueKey": "value",
                    }
                  }
                  setValue={[Function]}
                  theme={
                    Object {
                      "borderRadius": 4,
                      "colors": Object {
                        "danger": "#DE350B",
                        "dangerLight": "#FFBDAD",
                        "neutral0": "hsl(0, 0%, 100%)",
                        "neutral10": "hsl(0, 0%, 90%)",
                        "neutral20": "hsl(0, 0%, 80%)",
                        "neutral30": "hsl(0, 0%, 70%)",
                        "neutral40": "hsl(0, 0%, 60%)",
                        "neutral5": "hsl(0, 0%, 95%)",
                        "neutral50": "hsl(0, 0%, 50%)",
                        "neutral60": "hsl(0, 0%, 40%)",
                        "neutral70": "hsl(0, 0%, 30%)",
                        "neutral80": "hsl(0, 0%, 20%)",
                        "neutral90": "hsl(0, 0%, 10%)",
                        "primary": "#2684FF",
                        "primary25": "#DEEBFF",
                        "primary50": "#B2D4FF",
                        "primary75": "#4C9AFF",
                      },
                      "spacing": Object {
                        "baseUnit": 4,
                        "controlHeight": 38,
                        "menuGutter": 8,
                      },
                    }
                  }
                >
                  <div
                    className="css-10nd86i react-select-container false"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={false}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      options={Array []}
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "allowCreateWhileLoading": false,
                          "autoComplete": false,
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cacheOptions": false,
                          "captureMenuScroll": false,
                          "className": " react-select-container false  ",
                          "classNamePrefix": "react-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "createOptionPosition": "last",
                          "defaultInputValue": "",
                          "defaultMenuIsOpen": false,
                          "defaultOptions": true,
                          "defaultValue": null,
                          "escapeClearsValue": false,
                          "filterOption": null,
                          "formatCreateLabel": [Function],
                          "formatGroupLabel": [Function],
                          "getNewOptionData": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputValue": "",
                          "isDisabled": false,
                          "isLoading": true,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "isValidNewOption": [Function],
                          "labelKey": "label",
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [],
                          "pageSize": 5,
                          "placeholder": "Selecione",
                          "screenReaderStatus": [Function],
                          "styles": Object {},
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": "",
                          "valueKey": "value",
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <div
                        className="css-vj8t7z react-select__control"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <ValueContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "allowCreateWhileLoading": false,
                              "autoComplete": false,
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "className": " react-select-container false  ",
                              "classNamePrefix": "react-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "createOptionPosition": "last",
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": true,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatCreateLabel": [Function],
                              "formatGroupLabel": [Function],
                              "getNewOptionData": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": true,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "isValidNewOption": [Function],
                              "labelKey": "label",
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Selecione",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": "",
                              "valueKey": "value",
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <div
                            className="css-1hwfws3 react-select__value-container"
                          >
                            <Placeholder
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              isDisabled={false}
                              isMulti={false}
                              isRtl={false}
                              key="placeholder"
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1492t68 react-select__placeholder"
                              >
                                Selecione
                              </div>
                            </Placeholder>
                            <Input
                              aria-autocomplete="list"
                              autoCapitalize="none"
                              autoComplete="off"
                              autoCorrect="off"
                              cx={[Function]}
                              getStyles={[Function]}
                              id="react-select-2-input"
                              innerRef={[Function]}
                              isDisabled={false}
                              isHidden={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              spellCheck="false"
                              tabIndex="0"
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                              type="text"
                              value=""
                            >
                              <div
                                className="css-1g6gooi"
                              >
                                <AutosizeInput
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  className="react-select__input"
                                  disabled={false}
                                  id="react-select-2-input"
                                  injectStyles={true}
                                  inputRef={[Function]}
                                  inputStyle={
                                    Object {
                                      "background": 0,
                                      "border": 0,
                                      "color": "inherit",
                                      "fontSize": "inherit",
                                      "opacity": 1,
                                      "outline": 0,
                                      "padding": 0,
                                    }
                                  }
                                  minWidth={1}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  spellCheck="false"
                                  tabIndex="0"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="react-select__input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-autocomplete="list"
                                      autoCapitalize="none"
                                      autoComplete="off"
                                      autoCorrect="off"
                                      disabled={false}
                                      id="react-select-2-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      spellCheck="false"
                                      style={
                                        Object {
                                          "background": 0,
                                          "border": 0,
                                          "boxSizing": "content-box",
                                          "color": "inherit",
                                          "fontSize": "inherit",
                                          "opacity": 1,
                                          "outline": 0,
                                          "padding": 0,
                                          "width": "2px",
                                        }
                                      }
                                      tabIndex="0"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </div>
                            </Input>
                          </div>
                        </ValueContainer>
                        <IndicatorsContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "allowCreateWhileLoading": false,
                              "autoComplete": false,
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "className": " react-select-container false  ",
                              "classNamePrefix": "react-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "createOptionPosition": "last",
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": true,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatCreateLabel": [Function],
                              "formatGroupLabel": [Function],
                              "getNewOptionData": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": true,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "isValidNewOption": [Function],
                              "labelKey": "label",
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Selecione",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": "",
                              "valueKey": "value",
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <div
                            className="css-1wy0on6 react-select__indicators"
                          >
                            <LoadingIndicator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "aria-hidden": "true",
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              size={4}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                className="css-fraxkc react-select__indicator react-select__loading-indicator"
                              >
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={0}
                                  offset={false}
                                >
                                  <span
                                    className="css-pujnn1"
                                  />
                                </LoadingDot>
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={160}
                                  offset={true}
                                >
                                  <span
                                    className="css-gji98i"
                                  />
                                </LoadingDot>
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={320}
                                  offset={true}
                                >
                                  <span
                                    className="css-1frpy8x"
                                  />
                                </LoadingDot>
                              </div>
                            </LoadingIndicator>
                            <IndicatorSeparator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <span
                                className="css-d8oujb react-select__indicator-separator"
                              />
                            </IndicatorSeparator>
                            <DropdownIndicator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "aria-hidden": "true",
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                className="css-1ep9fjw react-select__indicator react-select__dropdown-indicator"
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <DownChevron>
                                  <Svg
                                    size={20}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="css-19bqh2r"
                                      focusable="false"
                                      height={20}
                                      viewBox="0 0 20 20"
                                      width={20}
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </Svg>
                                </DownChevron>
                              </div>
                            </DropdownIndicator>
                          </div>
                        </IndicatorsContainer>
                      </div>
                    </Control>
                  </div>
                </SelectContainer>
              </Select>
            </Creatable>
          </StateManager>
        </Async>
      </div>
    </StyledComponent>
  </SelectAutoCompleteStyles__SelectWrapper>
</SelectAutoComplete>
`;

exports[`Expect <SelectAutoComplete> to render properly with empty 1`] = `
<SelectAutoComplete
  onChange={[Function]}
  value=""
>
  <SelectAutoCompleteStyles__SelectWrapper
    className=""
  >
    <StyledComponent
      className=""
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0",
            "isStatic": true,
            "lastClassName": "bcmjyf",
            "rules": Array [
              "
    width: 100%;
    background-color: ",
              "#fff",
              ";
    padding: 16px 0;
    box-sizing: border-box;
    min-height: 66px;
    display: flex;
    flex-direction: column;
    position: relative; 
    border : 1px solid #f1f5f7;

    &.isFocusedWrapper {
        border-left: 4px solid ",
              "#33cccc",
              ";
    }

    .validation_msg {

        svg {
            position: absolute;
            top: 34px;
            right:  12px; 
            z-index: 5;
            background: ",
              "#fff",
              ";  
        }
        span {
            font-size: 12px;
            right: 12px;
            position: absolute;
            color: ",
              "#9966ff",
              ";
            z-index: 1;
            top: 10px;
        }
    }
    
    .react-select-container {
        background-color: ",
              "#fff",
              ";
        width: 100%;
        position: unset;
        padding: 0 24px; 
    }
    .react-select-container.focused {
        box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1); 
    }
    .react-select-container .react-select__value-container {
        border-radius: 0;
        flex: 1;
        padding: 0px; 
    }
    .react-select-container .react-select__placeholder {
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
        line-height: 1.2;
        letter-spacing: normal;
        color: ",
              "#4a5365",
              ";
        margin: 0; 
    }
    .react-select-container .react-select__control {
        border-width: 0;
        border-color: ",
              "#fff",
              " !important;
        background-color: ",
              "#fff",
              " !important;
        border-radius: 0 !important;
        box-shadow: none;
        min-height: 33px;
        cursor: pointer; 
    }
    .react-select-container .react-select__menu {
        border-radius: 0;
        margin-top: 0;
        border-color: ",
              "#859099",
              ";
        border-width: 20px !important;
        z-index: 50;
        left: 0; 
       
    }
    .react-select-container .react-select__menu-list {
        padding: 16px 0; 
    }
    .react-select-container .react-select__menu-list .react-select__option--is-selected {
        color: ",
              "#9966ff",
              ";
        background: rgba(",
              "#9966ff",
              ", 0.15); 
    }
    .react-select-container .react-select__indicator-separator {
        width: 0; 
    }
    .react-select-container .react-select__indicators {
        position: absolute;
        top: 0px;
        right: 0; 
    }
    .react-select-container .react-select__option {
        font-size: 16px;
        font-weight: normal;
        font-style: normal;
        font-stretch: normal;
        line-height: 3;
        letter-spacing: normal;
        color: ",
              "#859099",
              ";
        background-color: ",
              "#fff",
              ";
        padding: 0 24px;
        cursor: pointer; 
    }
    .react-select__option:last-child {
        background:  ",
              "#fff",
              ";
        color: ",
              "#9966ff",
              " !important;
    }
    .react-select-container .react-select__option:last-child:hover {
        opacity: .7; 
    }
    .react-select-container .react-select__option:hover {
        color: ",
              "#9966ff",
              "; 
    }
    .Select[aria-expanded='true'] .react-select-container .react-select__indicators .react-select__indicator.react-select__dropdown-indicator {
        transform: rotate(180deg); 
    }
    .react-select__indicator.react-select__dropdown-indicator {
        color: ",
              "#9966ff",
              ";
        padding: 0;
        transform: rotate(0deg);
        transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
        -webkit-user-select: none;
        -moz-user-select: -moz-none;
        -ms-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0); 
    }

    #react-select-2-input {
        cursor: none !important; 
    }
    // .react-select__indicator.react-select__loading-indicator {
    //     color: ",
              "#9966ff",
              " !important; 
    // }

    // .menu-top .react-select__menu-notice--loading {
    //     margin-top: 130px;
    //     height: 136px; 
    // }

    // .react-select__loading-indicator {
    //     position: relative;
    //     width: 21px;
    //     height: 21px;
    //     background: ",
              "#fff",
              ";
    //     left: 20px;
    //     z-index: 9999; 
    // }
    // .react-select__loading-indicator span {
    //     top: 0;
    //     left: 0;
    //     background: ",
              "#fff",
              ";
    //     display: block;
    //     position: absolute;
    //     width: 14px;
    //     height: 14px;
    //     margin: 2px;
    //     border: 2px solid;
    //     border-radius: 50%;
    //     animation: span 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
    //     border-color: ",
              "#9966ff",
              " ",
              "#9966ff",
              " ",
              "#9966ff",
              " ",
              "#fff",
              "; 
    // }
    // .react-select__loading-indicator span:nth-child(1) {
    //     animation-delay: -0.45s; 
    // }
    // .react-select__loading-indicator span:nth-child(2) {
    //     animation-delay: -0.3s; 
    // }
    // .react-select__loading-indicator span:nth-child(3) {
    //     animation-delay: -0.15s; 
    // }

    @keyframes span {
        0% {
            transform: rotate(0deg); 
        }
        100% {
        transform: rotate(360deg); 
    } 

",
            ],
          },
          "displayName": "SelectAutoCompleteStyles__SelectWrapper",
          "render": [Function],
          "styledComponentId": "SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="SelectAutoCompleteStyles__SelectWrapper-sc-6kk0qb-0 bcmjyf"
      >
        <SelectAutoCompleteStyles__Text>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "SelectAutoCompleteStyles__Text-sc-6kk0qb-1",
                  "isStatic": true,
                  "lastClassName": "lipOkn",
                  "rules": Array [
                    "
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.6;
  letter-spacing: normal;
  color: ",
                    "#859099",
                    ";
  margin-left: 24px;
",
                  ],
                },
                "displayName": "SelectAutoCompleteStyles__Text",
                "render": [Function],
                "styledComponentId": "SelectAutoCompleteStyles__Text-sc-6kk0qb-1",
                "target": "label",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <label
              className="SelectAutoCompleteStyles__Text-sc-6kk0qb-1 lipOkn"
            />
          </StyledComponent>
        </SelectAutoCompleteStyles__Text>
        <Async
          autoComplete={false}
          cacheOptions={false}
          className=" react-select-container false  "
          classNamePrefix="react-select"
          closeMenuOnSelect={true}
          createOptionPosition="last"
          defaultOptions={true}
          formatCreateLabel={[Function]}
          isSearchable={true}
          isValidNewOption={[Function]}
          key="key"
          labelKey="label"
          loadOptions={[Function]}
          loadingMessage={[Function]}
          noOptionsMessage={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInputChange={[Function]}
          onMenuClose={[Function]}
          onMenuOpen={[Function]}
          placeholder="Selecione"
          value=""
          valueKey="value"
        >
          <StateManager
            autoComplete={false}
            cacheOptions={false}
            className=" react-select-container false  "
            classNamePrefix="react-select"
            closeMenuOnSelect={true}
            createOptionPosition="last"
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultOptions={true}
            defaultValue={null}
            filterOption={null}
            formatCreateLabel={[Function]}
            isLoading={true}
            isSearchable={true}
            isValidNewOption={[Function]}
            labelKey="label"
            loadingMessage={[Function]}
            noOptionsMessage={[Function]}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onInputChange={[Function]}
            onMenuClose={[Function]}
            onMenuOpen={[Function]}
            options={Array []}
            placeholder="Selecione"
            value=""
            valueKey="value"
          >
            <Creatable
              allowCreateWhileLoading={false}
              autoComplete={false}
              cacheOptions={false}
              className=" react-select-container false  "
              classNamePrefix="react-select"
              closeMenuOnSelect={true}
              createOptionPosition="last"
              defaultInputValue=""
              defaultMenuIsOpen={false}
              defaultOptions={true}
              defaultValue={null}
              filterOption={null}
              formatCreateLabel={[Function]}
              getNewOptionData={[Function]}
              inputValue=""
              isLoading={true}
              isSearchable={true}
              isValidNewOption={[Function]}
              labelKey="label"
              loadingMessage={[Function]}
              menuIsOpen={false}
              noOptionsMessage={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onInputChange={[Function]}
              onMenuClose={[Function]}
              onMenuOpen={[Function]}
              options={Array []}
              placeholder="Selecione"
              value=""
              valueKey="value"
            >
              <Select
                allowCreateWhileLoading={false}
                autoComplete={false}
                backspaceRemovesValue={true}
                blurInputOnSelect={true}
                cacheOptions={false}
                captureMenuScroll={false}
                className=" react-select-container false  "
                classNamePrefix="react-select"
                closeMenuOnScroll={false}
                closeMenuOnSelect={true}
                components={Object {}}
                controlShouldRenderValue={true}
                createOptionPosition="last"
                defaultInputValue=""
                defaultMenuIsOpen={false}
                defaultOptions={true}
                defaultValue={null}
                escapeClearsValue={false}
                filterOption={null}
                formatCreateLabel={[Function]}
                formatGroupLabel={[Function]}
                getNewOptionData={[Function]}
                getOptionLabel={[Function]}
                getOptionValue={[Function]}
                inputValue=""
                isDisabled={false}
                isLoading={true}
                isMulti={false}
                isOptionDisabled={[Function]}
                isRtl={false}
                isSearchable={true}
                isValidNewOption={[Function]}
                labelKey="label"
                loadingMessage={[Function]}
                maxMenuHeight={300}
                menuIsOpen={false}
                menuPlacement="bottom"
                menuPosition="absolute"
                menuShouldBlockScroll={false}
                menuShouldScrollIntoView={true}
                minMenuHeight={140}
                noOptionsMessage={[Function]}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onInputChange={[Function]}
                onMenuClose={[Function]}
                onMenuOpen={[Function]}
                openMenuOnClick={true}
                openMenuOnFocus={false}
                options={Array []}
                pageSize={5}
                placeholder="Selecione"
                screenReaderStatus={[Function]}
                styles={Object {}}
                tabIndex="0"
                tabSelectsValue={true}
                value=""
                valueKey="value"
              >
                <SelectContainer
                  className=" react-select-container false  "
                  clearValue={[Function]}
                  cx={[Function]}
                  getStyles={[Function]}
                  getValue={[Function]}
                  hasValue={false}
                  innerProps={
                    Object {
                      "id": undefined,
                      "onKeyDown": [Function],
                    }
                  }
                  isDisabled={false}
                  isFocused={false}
                  isMulti={false}
                  isRtl={false}
                  options={Array []}
                  selectOption={[Function]}
                  selectProps={
                    Object {
                      "allowCreateWhileLoading": false,
                      "autoComplete": false,
                      "backspaceRemovesValue": true,
                      "blurInputOnSelect": true,
                      "cacheOptions": false,
                      "captureMenuScroll": false,
                      "className": " react-select-container false  ",
                      "classNamePrefix": "react-select",
                      "closeMenuOnScroll": false,
                      "closeMenuOnSelect": true,
                      "components": Object {},
                      "controlShouldRenderValue": true,
                      "createOptionPosition": "last",
                      "defaultInputValue": "",
                      "defaultMenuIsOpen": false,
                      "defaultOptions": true,
                      "defaultValue": null,
                      "escapeClearsValue": false,
                      "filterOption": null,
                      "formatCreateLabel": [Function],
                      "formatGroupLabel": [Function],
                      "getNewOptionData": [Function],
                      "getOptionLabel": [Function],
                      "getOptionValue": [Function],
                      "inputValue": "",
                      "isDisabled": false,
                      "isLoading": true,
                      "isMulti": false,
                      "isOptionDisabled": [Function],
                      "isRtl": false,
                      "isSearchable": true,
                      "isValidNewOption": [Function],
                      "labelKey": "label",
                      "loadingMessage": [Function],
                      "maxMenuHeight": 300,
                      "menuIsOpen": false,
                      "menuPlacement": "bottom",
                      "menuPosition": "absolute",
                      "menuShouldBlockScroll": false,
                      "menuShouldScrollIntoView": true,
                      "minMenuHeight": 140,
                      "noOptionsMessage": [Function],
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "onInputChange": [Function],
                      "onMenuClose": [Function],
                      "onMenuOpen": [Function],
                      "openMenuOnClick": true,
                      "openMenuOnFocus": false,
                      "options": Array [],
                      "pageSize": 5,
                      "placeholder": "Selecione",
                      "screenReaderStatus": [Function],
                      "styles": Object {},
                      "tabIndex": "0",
                      "tabSelectsValue": true,
                      "value": "",
                      "valueKey": "value",
                    }
                  }
                  setValue={[Function]}
                  theme={
                    Object {
                      "borderRadius": 4,
                      "colors": Object {
                        "danger": "#DE350B",
                        "dangerLight": "#FFBDAD",
                        "neutral0": "hsl(0, 0%, 100%)",
                        "neutral10": "hsl(0, 0%, 90%)",
                        "neutral20": "hsl(0, 0%, 80%)",
                        "neutral30": "hsl(0, 0%, 70%)",
                        "neutral40": "hsl(0, 0%, 60%)",
                        "neutral5": "hsl(0, 0%, 95%)",
                        "neutral50": "hsl(0, 0%, 50%)",
                        "neutral60": "hsl(0, 0%, 40%)",
                        "neutral70": "hsl(0, 0%, 30%)",
                        "neutral80": "hsl(0, 0%, 20%)",
                        "neutral90": "hsl(0, 0%, 10%)",
                        "primary": "#2684FF",
                        "primary25": "#DEEBFF",
                        "primary50": "#B2D4FF",
                        "primary75": "#4C9AFF",
                      },
                      "spacing": Object {
                        "baseUnit": 4,
                        "controlHeight": 38,
                        "menuGutter": 8,
                      },
                    }
                  }
                >
                  <div
                    className="css-10nd86i react-select-container false"
                    onKeyDown={[Function]}
                  >
                    <Control
                      clearValue={[Function]}
                      cx={[Function]}
                      getStyles={[Function]}
                      getValue={[Function]}
                      hasValue={false}
                      innerProps={
                        Object {
                          "onMouseDown": [Function],
                          "onTouchEnd": [Function],
                        }
                      }
                      innerRef={[Function]}
                      isDisabled={false}
                      isFocused={false}
                      isMulti={false}
                      isRtl={false}
                      options={Array []}
                      selectOption={[Function]}
                      selectProps={
                        Object {
                          "allowCreateWhileLoading": false,
                          "autoComplete": false,
                          "backspaceRemovesValue": true,
                          "blurInputOnSelect": true,
                          "cacheOptions": false,
                          "captureMenuScroll": false,
                          "className": " react-select-container false  ",
                          "classNamePrefix": "react-select",
                          "closeMenuOnScroll": false,
                          "closeMenuOnSelect": true,
                          "components": Object {},
                          "controlShouldRenderValue": true,
                          "createOptionPosition": "last",
                          "defaultInputValue": "",
                          "defaultMenuIsOpen": false,
                          "defaultOptions": true,
                          "defaultValue": null,
                          "escapeClearsValue": false,
                          "filterOption": null,
                          "formatCreateLabel": [Function],
                          "formatGroupLabel": [Function],
                          "getNewOptionData": [Function],
                          "getOptionLabel": [Function],
                          "getOptionValue": [Function],
                          "inputValue": "",
                          "isDisabled": false,
                          "isLoading": true,
                          "isMulti": false,
                          "isOptionDisabled": [Function],
                          "isRtl": false,
                          "isSearchable": true,
                          "isValidNewOption": [Function],
                          "labelKey": "label",
                          "loadingMessage": [Function],
                          "maxMenuHeight": 300,
                          "menuIsOpen": false,
                          "menuPlacement": "bottom",
                          "menuPosition": "absolute",
                          "menuShouldBlockScroll": false,
                          "menuShouldScrollIntoView": true,
                          "minMenuHeight": 140,
                          "noOptionsMessage": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "onInputChange": [Function],
                          "onMenuClose": [Function],
                          "onMenuOpen": [Function],
                          "openMenuOnClick": true,
                          "openMenuOnFocus": false,
                          "options": Array [],
                          "pageSize": 5,
                          "placeholder": "Selecione",
                          "screenReaderStatus": [Function],
                          "styles": Object {},
                          "tabIndex": "0",
                          "tabSelectsValue": true,
                          "value": "",
                          "valueKey": "value",
                        }
                      }
                      setValue={[Function]}
                      theme={
                        Object {
                          "borderRadius": 4,
                          "colors": Object {
                            "danger": "#DE350B",
                            "dangerLight": "#FFBDAD",
                            "neutral0": "hsl(0, 0%, 100%)",
                            "neutral10": "hsl(0, 0%, 90%)",
                            "neutral20": "hsl(0, 0%, 80%)",
                            "neutral30": "hsl(0, 0%, 70%)",
                            "neutral40": "hsl(0, 0%, 60%)",
                            "neutral5": "hsl(0, 0%, 95%)",
                            "neutral50": "hsl(0, 0%, 50%)",
                            "neutral60": "hsl(0, 0%, 40%)",
                            "neutral70": "hsl(0, 0%, 30%)",
                            "neutral80": "hsl(0, 0%, 20%)",
                            "neutral90": "hsl(0, 0%, 10%)",
                            "primary": "#2684FF",
                            "primary25": "#DEEBFF",
                            "primary50": "#B2D4FF",
                            "primary75": "#4C9AFF",
                          },
                          "spacing": Object {
                            "baseUnit": 4,
                            "controlHeight": 38,
                            "menuGutter": 8,
                          },
                        }
                      }
                    >
                      <div
                        className="css-vj8t7z react-select__control"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <ValueContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "allowCreateWhileLoading": false,
                              "autoComplete": false,
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "className": " react-select-container false  ",
                              "classNamePrefix": "react-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "createOptionPosition": "last",
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": true,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatCreateLabel": [Function],
                              "formatGroupLabel": [Function],
                              "getNewOptionData": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": true,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "isValidNewOption": [Function],
                              "labelKey": "label",
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Selecione",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": "",
                              "valueKey": "value",
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <div
                            className="css-1hwfws3 react-select__value-container"
                          >
                            <Placeholder
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              isDisabled={false}
                              isMulti={false}
                              isRtl={false}
                              key="placeholder"
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                className="css-1492t68 react-select__placeholder"
                              >
                                Selecione
                              </div>
                            </Placeholder>
                            <Input
                              aria-autocomplete="list"
                              autoCapitalize="none"
                              autoComplete="off"
                              autoCorrect="off"
                              cx={[Function]}
                              getStyles={[Function]}
                              id="react-select-3-input"
                              innerRef={[Function]}
                              isDisabled={false}
                              isHidden={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              spellCheck="false"
                              tabIndex="0"
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                              type="text"
                              value=""
                            >
                              <div
                                className="css-1g6gooi"
                              >
                                <AutosizeInput
                                  aria-autocomplete="list"
                                  autoCapitalize="none"
                                  autoComplete="off"
                                  autoCorrect="off"
                                  className="react-select__input"
                                  disabled={false}
                                  id="react-select-3-input"
                                  injectStyles={true}
                                  inputRef={[Function]}
                                  inputStyle={
                                    Object {
                                      "background": 0,
                                      "border": 0,
                                      "color": "inherit",
                                      "fontSize": "inherit",
                                      "opacity": 1,
                                      "outline": 0,
                                      "padding": 0,
                                    }
                                  }
                                  minWidth={1}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  spellCheck="false"
                                  tabIndex="0"
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="react-select__input"
                                    style={
                                      Object {
                                        "display": "inline-block",
                                      }
                                    }
                                  >
                                    <input
                                      aria-autocomplete="list"
                                      autoCapitalize="none"
                                      autoComplete="off"
                                      autoCorrect="off"
                                      disabled={false}
                                      id="react-select-3-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      spellCheck="false"
                                      style={
                                        Object {
                                          "background": 0,
                                          "border": 0,
                                          "boxSizing": "content-box",
                                          "color": "inherit",
                                          "fontSize": "inherit",
                                          "opacity": 1,
                                          "outline": 0,
                                          "padding": 0,
                                          "width": "2px",
                                        }
                                      }
                                      tabIndex="0"
                                      type="text"
                                      value=""
                                    />
                                    <div
                                      style={
                                        Object {
                                          "height": 0,
                                          "left": 0,
                                          "overflow": "scroll",
                                          "position": "absolute",
                                          "top": 0,
                                          "visibility": "hidden",
                                          "whiteSpace": "pre",
                                        }
                                      }
                                    />
                                  </div>
                                </AutosizeInput>
                              </div>
                            </Input>
                          </div>
                        </ValueContainer>
                        <IndicatorsContainer
                          clearValue={[Function]}
                          cx={[Function]}
                          getStyles={[Function]}
                          getValue={[Function]}
                          hasValue={false}
                          isDisabled={false}
                          isMulti={false}
                          isRtl={false}
                          options={Array []}
                          selectOption={[Function]}
                          selectProps={
                            Object {
                              "allowCreateWhileLoading": false,
                              "autoComplete": false,
                              "backspaceRemovesValue": true,
                              "blurInputOnSelect": true,
                              "cacheOptions": false,
                              "captureMenuScroll": false,
                              "className": " react-select-container false  ",
                              "classNamePrefix": "react-select",
                              "closeMenuOnScroll": false,
                              "closeMenuOnSelect": true,
                              "components": Object {},
                              "controlShouldRenderValue": true,
                              "createOptionPosition": "last",
                              "defaultInputValue": "",
                              "defaultMenuIsOpen": false,
                              "defaultOptions": true,
                              "defaultValue": null,
                              "escapeClearsValue": false,
                              "filterOption": null,
                              "formatCreateLabel": [Function],
                              "formatGroupLabel": [Function],
                              "getNewOptionData": [Function],
                              "getOptionLabel": [Function],
                              "getOptionValue": [Function],
                              "inputValue": "",
                              "isDisabled": false,
                              "isLoading": true,
                              "isMulti": false,
                              "isOptionDisabled": [Function],
                              "isRtl": false,
                              "isSearchable": true,
                              "isValidNewOption": [Function],
                              "labelKey": "label",
                              "loadingMessage": [Function],
                              "maxMenuHeight": 300,
                              "menuIsOpen": false,
                              "menuPlacement": "bottom",
                              "menuPosition": "absolute",
                              "menuShouldBlockScroll": false,
                              "menuShouldScrollIntoView": true,
                              "minMenuHeight": 140,
                              "noOptionsMessage": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "onInputChange": [Function],
                              "onMenuClose": [Function],
                              "onMenuOpen": [Function],
                              "openMenuOnClick": true,
                              "openMenuOnFocus": false,
                              "options": Array [],
                              "pageSize": 5,
                              "placeholder": "Selecione",
                              "screenReaderStatus": [Function],
                              "styles": Object {},
                              "tabIndex": "0",
                              "tabSelectsValue": true,
                              "value": "",
                              "valueKey": "value",
                            }
                          }
                          setValue={[Function]}
                          theme={
                            Object {
                              "borderRadius": 4,
                              "colors": Object {
                                "danger": "#DE350B",
                                "dangerLight": "#FFBDAD",
                                "neutral0": "hsl(0, 0%, 100%)",
                                "neutral10": "hsl(0, 0%, 90%)",
                                "neutral20": "hsl(0, 0%, 80%)",
                                "neutral30": "hsl(0, 0%, 70%)",
                                "neutral40": "hsl(0, 0%, 60%)",
                                "neutral5": "hsl(0, 0%, 95%)",
                                "neutral50": "hsl(0, 0%, 50%)",
                                "neutral60": "hsl(0, 0%, 40%)",
                                "neutral70": "hsl(0, 0%, 30%)",
                                "neutral80": "hsl(0, 0%, 20%)",
                                "neutral90": "hsl(0, 0%, 10%)",
                                "primary": "#2684FF",
                                "primary25": "#DEEBFF",
                                "primary50": "#B2D4FF",
                                "primary75": "#4C9AFF",
                              },
                              "spacing": Object {
                                "baseUnit": 4,
                                "controlHeight": 38,
                                "menuGutter": 8,
                              },
                            }
                          }
                        >
                          <div
                            className="css-1wy0on6 react-select__indicators"
                          >
                            <LoadingIndicator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "aria-hidden": "true",
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              size={4}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                className="css-fraxkc react-select__indicator react-select__loading-indicator"
                              >
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={0}
                                  offset={false}
                                >
                                  <span
                                    className="css-pujnn1"
                                  />
                                </LoadingDot>
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={160}
                                  offset={true}
                                >
                                  <span
                                    className="css-gji98i"
                                  />
                                </LoadingDot>
                                <LoadingDot
                                  color="hsl(0, 0%, 80%)"
                                  delay={320}
                                  offset={true}
                                >
                                  <span
                                    className="css-1frpy8x"
                                  />
                                </LoadingDot>
                              </div>
                            </LoadingIndicator>
                            <IndicatorSeparator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <span
                                className="css-d8oujb react-select__indicator-separator"
                              />
                            </IndicatorSeparator>
                            <DropdownIndicator
                              clearValue={[Function]}
                              cx={[Function]}
                              getStyles={[Function]}
                              getValue={[Function]}
                              hasValue={false}
                              innerProps={
                                Object {
                                  "aria-hidden": "true",
                                  "onMouseDown": [Function],
                                  "onTouchEnd": [Function],
                                }
                              }
                              isDisabled={false}
                              isFocused={false}
                              isMulti={false}
                              isRtl={false}
                              options={Array []}
                              selectOption={[Function]}
                              selectProps={
                                Object {
                                  "allowCreateWhileLoading": false,
                                  "autoComplete": false,
                                  "backspaceRemovesValue": true,
                                  "blurInputOnSelect": true,
                                  "cacheOptions": false,
                                  "captureMenuScroll": false,
                                  "className": " react-select-container false  ",
                                  "classNamePrefix": "react-select",
                                  "closeMenuOnScroll": false,
                                  "closeMenuOnSelect": true,
                                  "components": Object {},
                                  "controlShouldRenderValue": true,
                                  "createOptionPosition": "last",
                                  "defaultInputValue": "",
                                  "defaultMenuIsOpen": false,
                                  "defaultOptions": true,
                                  "defaultValue": null,
                                  "escapeClearsValue": false,
                                  "filterOption": null,
                                  "formatCreateLabel": [Function],
                                  "formatGroupLabel": [Function],
                                  "getNewOptionData": [Function],
                                  "getOptionLabel": [Function],
                                  "getOptionValue": [Function],
                                  "inputValue": "",
                                  "isDisabled": false,
                                  "isLoading": true,
                                  "isMulti": false,
                                  "isOptionDisabled": [Function],
                                  "isRtl": false,
                                  "isSearchable": true,
                                  "isValidNewOption": [Function],
                                  "labelKey": "label",
                                  "loadingMessage": [Function],
                                  "maxMenuHeight": 300,
                                  "menuIsOpen": false,
                                  "menuPlacement": "bottom",
                                  "menuPosition": "absolute",
                                  "menuShouldBlockScroll": false,
                                  "menuShouldScrollIntoView": true,
                                  "minMenuHeight": 140,
                                  "noOptionsMessage": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "onInputChange": [Function],
                                  "onMenuClose": [Function],
                                  "onMenuOpen": [Function],
                                  "openMenuOnClick": true,
                                  "openMenuOnFocus": false,
                                  "options": Array [],
                                  "pageSize": 5,
                                  "placeholder": "Selecione",
                                  "screenReaderStatus": [Function],
                                  "styles": Object {},
                                  "tabIndex": "0",
                                  "tabSelectsValue": true,
                                  "value": "",
                                  "valueKey": "value",
                                }
                              }
                              setValue={[Function]}
                              theme={
                                Object {
                                  "borderRadius": 4,
                                  "colors": Object {
                                    "danger": "#DE350B",
                                    "dangerLight": "#FFBDAD",
                                    "neutral0": "hsl(0, 0%, 100%)",
                                    "neutral10": "hsl(0, 0%, 90%)",
                                    "neutral20": "hsl(0, 0%, 80%)",
                                    "neutral30": "hsl(0, 0%, 70%)",
                                    "neutral40": "hsl(0, 0%, 60%)",
                                    "neutral5": "hsl(0, 0%, 95%)",
                                    "neutral50": "hsl(0, 0%, 50%)",
                                    "neutral60": "hsl(0, 0%, 40%)",
                                    "neutral70": "hsl(0, 0%, 30%)",
                                    "neutral80": "hsl(0, 0%, 20%)",
                                    "neutral90": "hsl(0, 0%, 10%)",
                                    "primary": "#2684FF",
                                    "primary25": "#DEEBFF",
                                    "primary50": "#B2D4FF",
                                    "primary75": "#4C9AFF",
                                  },
                                  "spacing": Object {
                                    "baseUnit": 4,
                                    "controlHeight": 38,
                                    "menuGutter": 8,
                                  },
                                }
                              }
                            >
                              <div
                                aria-hidden="true"
                                className="css-1ep9fjw react-select__indicator react-select__dropdown-indicator"
                                onMouseDown={[Function]}
                                onTouchEnd={[Function]}
                              >
                                <DownChevron>
                                  <Svg
                                    size={20}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="css-19bqh2r"
                                      focusable="false"
                                      height={20}
                                      viewBox="0 0 20 20"
                                      width={20}
                                    >
                                      <path
                                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                                      />
                                    </svg>
                                  </Svg>
                                </DownChevron>
                              </div>
                            </DropdownIndicator>
                          </div>
                        </IndicatorsContainer>
                      </div>
                    </Control>
                  </div>
                </SelectContainer>
              </Select>
            </Creatable>
          </StateManager>
        </Async>
      </div>
    </StyledComponent>
  </SelectAutoCompleteStyles__SelectWrapper>
</SelectAutoComplete>
`;
